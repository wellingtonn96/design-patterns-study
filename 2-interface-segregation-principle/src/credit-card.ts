import { IGenerateDocument } from "./contracts/generate-document-interface";
import { IPaymentMethod } from "./contracts/payment-method-interface";

/**
 * üí≥ CART√ÉO DE CR√âDITO - Interface Segregation Principle (ISP)
 * 
 * Esta classe implementa apenas as interfaces que realmente precisa:
 * - IPaymentMethod: Para processar pagamentos
 * - IGenerateDocument: Para gerar comprovantes
 * 
 * N√ÉO implementa IGenerateQrCode porque cart√£o de cr√©dito
 * n√£o gera QR Code - isso seria uma viola√ß√£o do ISP.
 */
export class CreditCard implements IPaymentMethod, IGenerateDocument {
    /**
     * Processa pagamento com cart√£o de cr√©dito
     * @param amount - Valor a ser pago
     * @param description - Descri√ß√£o do pagamento
     */
    public pay(amount: number, description: string): void {
        console.log("üí≥ Cart√£o de Cr√©dito: Processando pagamento...");
        console.log(`   Valor: R$ ${amount.toFixed(2)}`);
        console.log(`   Descri√ß√£o: ${description}`);
        console.log("   ‚úÖ Pagamento aprovado!");
    }

    /**
     * Gera comprovante de pagamento com cart√£o de cr√©dito
     * @param amount - Valor do pagamento
     * @param description - Descri√ß√£o do pagamento
     * @returns Comprovante em formato string
     */
    public generateDocument(amount: number, description: string): string {
        const document = `
=== COMPROVANTE DE PAGAMENTO ===
M√©todo: Cart√£o de Cr√©dito
Valor: R$ ${amount.toFixed(2)}
Descri√ß√£o: ${description}
Data: ${new Date().toLocaleString()}
Status: Aprovado
===============================
        `;
        
        console.log("üìÑ Gerando comprovante de cart√£o de cr√©dito...");
        console.log(document);
        
        return document;
    }
}